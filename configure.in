AC_INIT(navi2ch.el)
AM_INIT_AUTOMAKE(navi2ch, 1.7.3)
AM_MAINTAINER_MODE

AC_PREREQ(2.53)

# Emacs set environment variable EMACS as t
test "x$EMACS" = xt && unset EMACS

emacsen="emacs xemacs"

AC_CANONICAL_HOST

case "$host_os" in
*cygwin*)
  with_bash=yes
  emacsen="$emacsen MeadowNT.exe Meadow95.exe"
  ;;
esac

AC_ARG_WITH(bash,
[  --with-bash             Use Bash to build],
[case "$withval" in
yes) SHELL=bash ;;
no)  ;;
*)   SHELL="$withval" ;;
esac])

AC_ARG_WITH(xemacs,
[  --with-xemacs           Use XEmacs to build],
[case "$withval" in
yes) emacsen="xemacs" ;;
no)  emacsen="emacs" ;;
*)   EMACS="$withval" ;;
esac])

AC_ARG_WITH(emacs,
[  --with-emacs            Use Emacs to build],
[case "$withval" in
yes) emacsen="emacs" ;;
no)  emacsen="xemacs" ;;
*)   EMACS="$withval" ;;
esac])

if test -n "${with_xemacs+set}" && test -n "${with_emacs+set}"; then
  AC_MSG_ERROR(specify one of --with-xemacs or --with-emacs)
fi

AC_CHECK_PROG(CVS, cvs, cvs -z3, :)
AC_PROG_LN_S

AC_CHECK_PROGS(EMACS, ${emacsen}, no)
if test "$EMACS" = "no"; then
  AC_MSG_ERROR(cannot find emacs)
fi

AC_MSG_CHECKING([detecting your emacs type])
AC_EMACS_LISP(emacstype, [dnl
(princ (cond ((featurep 'xemacs) 'xemacs)
             ((>= emacs-major-version 21) 'emacs21)
             ((= emacs-major-version 20) 'emacs20)
             (t 'UNKNOWN)))])
AC_MSG_RESULT([$emacstype])

if test -z "$emacstype" || test "$emacstype" = UNKNOWN; then
  AC_MSG_ERROR(this package does not work on your emacs)
fi

# detect packagedir
AC_ARG_WITH(packagedir,
[  --with-packagedir[[=DIR]] Use package directory
                          (With XEmacs, this option also sets
                           icondir, lispdir, infodir, etc...)],
[ AC_MSG_CHECKING([where package files should go])
test "$emacstype" != xemacs && AC_MSG_ERROR(packagedir only works with XEmacs)
case "$withval" in
yes) AC_EMACS_LISP(packagedir, [dnl
(princ (expand-file-name "../site-packages" data-directory))])
;;
no)  unset packagedir ;;
*)   packagedir="$withval" ;;
esac
AC_MSG_RESULT([$packagedir])])

AC_SUBST(packagedir)

if test "$emacstype" = xemacs && test -n "$packagedir"; then
  icondir='${packagedir}/etc/navi2ch'
  lispdir='${packagedir}/lisp/navi2ch'
  infodir='${packagedir}/info'
fi

AM_PATH_LISPDIR

AC_ARG_WITH(icondir,
[  --with-icondir=DIR      Override the default icons directory],
[ icondir="$withval"
AC_MSG_CHECKING([where icon files should go])
AC_MSG_RESULT([$icondir])],
[
if test -z "${icondir}"; then
  AC_CACHE_CHECK([where icon files should go], [cv_icondir], [dnl
    AC_EMACS_LISP(cv_icondir,[dnl
(princ (expand-file-name "navi2ch/icons" data-directory))])
    if test -z "$cv_icondir"; then
      cv_icondir='${datadir}/pixmaps/navi2ch'
    fi
  ])
  icondir="$cv_icondir"
fi
])

AC_SUBST(icondir)

# link files
if test `cd ${srcdir}; pwd` != `pwd`; then
  AC_CONFIG_COMMANDS([link-lisp],
  [
    rm -f *.el
    ${navi2ch_ln_s} ${ac_srcdir}/*.el .
  ], [navi2ch_ln_s="${LN_S}"])
  AC_CONFIG_LINKS(doc/navi2ch.info:doc/navi2ch.info)
fi

AC_OUTPUT([Makefile contrib/Makefile doc/Makefile icons/Makefile])
